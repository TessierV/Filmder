const nameInput = document.querySelector('#name-input');
const matchUI = document.querySelector('.match-ui');
const swipperUI = document.querySelector('.swipper-start')
const startUI = document.querySelector('.start-ui');
const nameValue = document.querySelector('#name-value');
const genreInput = document.querySelector('#genre');
const displayMovie2 = document.querySelector('.display-movie2');
const displayMovie = document.querySelector('.display-movie');
const footerUi = document.querySelector('footer');

// Test this is a match
const Thisismatch = document.querySelector('.thisismatch');

// Hide 'match' UI
matchUI.classList.add('none');

const IMGPATH = "https://image.tmdb.org/t/p/w1280";

//test set tutorial page
document.querySelector('.button_swipper').addEventListener('click', (e) => {
    e.preventDefault();
    document.querySelector('.swipper-start').style.display = 'none';
    document.querySelector('.start-ui').style.display = 'block';
});

// Event listeners
document.querySelector('form').addEventListener('submit', (e) => {
    e.preventDefault();
    document.querySelector('.loader').style.display = 'block';
    startUI.style.display = 'none';
    footerUi.style.display = 'none';
    Thisismatch.style.display = 'none';
    setTimeout(getMovies, 5000);
});

document.querySelector('.next-movie').addEventListener('click', getMovies)
document.querySelector('.change-cat').addEventListener('click', displayStartUI)
document.querySelector('.ismatch').addEventListener('click', displayMatch)

let genreID;
let moviesList = [];


async function getMovies() {
    assignID();

  // Vérifier si la liste des films existe dans le stockage local
    try {
        // Generate random page number
        const randomNumberPg = Math.floor(Math.random() * (50));
        const APIURL = `https://api.themoviedb.org/3/discover/movie?api_key=4898aec2424aaa52b8e4e628ec9b9e04&page=${randomNumberPg}&with_genres=${genreID}&language=en-US`;

        const res = await fetch(APIURL);

        // Check if response is successful
        if (!res.ok) {
            // Throw error if response is not ok
            throw new Error(res.status);
        }

        // Convert response object to JSON
        const resData = await res.json()
        // Generate a random index number
        const randomNumber = Math.floor(Math.random() * (resData.results.length));
        // Hide loader
        document.querySelector('.loader').style.display = 'none'
        document.querySelector('.thisismatch').style.display = 'none'

        footerUi.style.display = 'none';
        const movie = resData.results[randomNumber];

        currentMovie = {
            title: movie.title,
    genre: await getGenre(movie.genre_ids),
    poster_path: movie.poster_path,
            // Ajoutez d'autres propriétés nécessaires du film
          };
          updateMoviesListUI();

        displayMatch(movie.title);
        displayMatchUI();

        // Display random movie
        showMovie(movie);
        //test


    } catch (error) {
        console.log(error)
        displayStartUI()
        // Hide loader
        document.querySelector('.loader').style.display = 'none';
        // Show error in UI
        const err = document.createElement('p');
        err.textContent = 'Something went wrong, try again!';
        err.classList.add('err-msg');
        document.querySelector('header').appendChild(err)

        // Remove error message after two seconds
        setTimeout(() => err.remove(), 6000)
    }

}


function showMovie(movie) {
    displayMovie.innerHTML = `
        <img
        src="${getPoster(IMGPATH, movie.poster_path)}"
        alt="${movie.title}"
        class="movie-poster2"
        />
    `;
    setGaugeValue(gaugeElement, movie.vote_average, movie.vote_count, movie.popularity, movie.adult, movie.backdrop_path, movie.genre, movie.genreID);
    showMovie2(movie);
}

/*Gauge*/

const gaugeElement = document.querySelector(".gauge");

function setGaugeValue(gauge, value, vote_count, popularity, adult, backdrop_path) {
    if (value < 0 || value > 10) {
        return;
    }
    const angle = value / 10 * 180;
    gauge.querySelector(".gauge__fill").style.transform = `rotate(${angle}deg)`;
}

function showMovie2(movie) {

    displayMovie2.innerHTML = `
    <div class="card">
    <div class="card__image" alt="">
    <div style="display: flex; flex-direction: row; width: 100%; height: 100%;">
            <div style="flex-basis: 40%; display: flex;  justify-content: center; align-items: center;">
                <p style="font-size: 10px; text-align: left;"><b>vote average</b>: ${movie.vote_average} / 10<br>${movie.vote_count} voted</p>
            </div>
            <div style="flex-basis: 60%; display: flex; justify-content: center; align-items: center;">
                <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; ">
                    <button style="text-align: center; font-size: 7px; height: 30px; width: 30px; border-radius: 50%;">${movie.vote_count}</button>
                    <h4 style="margin-top: 5px;">count</h4>
                </div>
                    <div style="display: flex; flex-direction: column; align-items: center; justify-content: center;">
                    <button style="text-align: center; font-size: 7px; height: 30px; width: 30px; border-radius: 50%;">${movie.popularity}</button>
                <h4 style="margin-top: 5px; ">culte</h4>
                </div>
                <div style="margin-left:"2%"; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                <button style="border: none; height: 30px; width: 30px; border-radius: 50%; padding: 5%; background-color: transparent; background-size: cover; background-image: url(${movie.adult ? './images/icons/children.png' : './images/icons/baby-boy.png'});">
            </button>
                    <h4 style="margin-top: 5px;">${movie.adult ? 'Adult' : 'Family'}</h4>
                </div>
            </div>
        </div>
    </div>
    <div class="card__overlay">
        <div class="card__header">
            <svg class="card__arc" xmlns="http://www.w3.org/2000/svg"><path /></svg>
            ${getGenreImage(genreInput.value)}
            <div class="card__header-text">
                <h2 class="subheading">${movie.title}</h2>
                <p class="card__status"><strong>Year:</strong> ${getYear(movie.release_date)}</p>
            </div>
        </div>
        <div class="card__description">
        <p><b>Original title</b>: ${movie.original_title}</p>
        <p class="scroller">${movie.overview}</p>
        </div>
    </div>
</div>
    `;
}

async function getGenre(genreIds) {
    const APIURL = `https://api.themoviedb.org/3/genre/movie/list?api_key=4898aec2424aaa52b8e4e628ec9b9e04&language=en-US`;
    const res = await fetch(APIURL);
    const resData = await res.json();
    const genres = resData.genres;
    const movieGenres = genres.filter(genre => genreIds.includes(genre.id));
    return movieGenres.map(genre => genre.name).join(', ');
  }
// Switch a certain image depending of the genre
function getGenreImage(genre) {
    let image;
    switch (genre) {

        case 'Action':
            image = '<a class="card__thumb"  ><svg height="100%" viewBox="0 0 128 128" width="100%" xmlns="http://www.w3.org/2000/svg"><g id="Glyph"><g id="Glyph-2" data-name="Glyph"><circle cx="53" cy="50.25" r="10.75"/><circle cx="78" cy="55.25" r="10.25"/><rect height="14" rx="4.5" width="33" x="95" y="57"/><rect height="14" rx="4.5" width="33" y="57"/><rect height="33" rx="4.5" width="14" x="57"/><path d="m52.2 122.321a1.51 1.51 0 0 0 1.8-1.47v-11.28a1.5 1.5 0 0 0 -1.133-1.454 45.454 45.454 0 0 1 -32.982-32.984 1.5 1.5 0 0 0 -1.454-1.133h-11.272a1.511 1.511 0 0 0 -1.471 1.8 59.352 59.352 0 0 0 46.512 46.521z"/><path d="m7.159 54h11.272a1.5 1.5 0 0 0 1.454-1.133 45.454 45.454 0 0 1 32.982-32.984 1.5 1.5 0 0 0 1.133-1.454v-11.28a1.509 1.509 0 0 0 -1.8-1.47 59.352 59.352 0 0 0 -46.512 46.521 1.511 1.511 0 0 0 1.471 1.8z"/><path d="m75.133 19.885a45.454 45.454 0 0 1 32.984 32.982 1.5 1.5 0 0 0 1.454 1.133h11.28a1.51 1.51 0 0 0 1.47-1.8 59.351 59.351 0 0 0 -46.521-46.511 1.508 1.508 0 0 0 -1.8 1.47v11.272a1.5 1.5 0 0 0 1.133 1.454z"/><path d="m74 109.571v11.28a1.51 1.51 0 0 0 1.8 1.47 59.355 59.355 0 0 0 46.512-46.521 1.51 1.51 0 0 0 -1.471-1.8h-11.272a1.5 1.5 0 0 0 -1.454 1.133 45.454 45.454 0 0 1 -32.982 32.984 1.5 1.5 0 0 0 -1.133 1.454z"/><rect height="33" rx="4.5" width="14" x="57" y="95"/><path d="m78.011 67.208a16.6 16.6 0 0 0 -5.144.826 1.511 1.511 0 0 0 -.783 2.259 22.92 22.92 0 0 1 3.08 6.782 10.374 10.374 0 0 1 -3.285 10.534 1.512 1.512 0 0 0 .641 2.6 24.989 24.989 0 0 0 19.3-3.676 6.369 6.369 0 0 0 2.463-6.823 16.9 16.9 0 0 0 -16.272-12.502z"/><path d="m72.267 77.855a19.925 19.925 0 0 0 -38.512 0 7.345 7.345 0 0 0 2.845 7.872 28.807 28.807 0 0 0 32.827 0 7.347 7.347 0 0 0 2.84-7.872z"/></g></g></svg></a>';
            break;
        case 'Adventure':
            image = '<a class="card__thumb"  ><svg id="Layer_1" height="100%" viewBox="0 0 48 48" width="100%" xmlns="http://www.w3.org/2000/svg" data-name="Layer 1"><path d="m24 2a22 22 0 1 0 22 22 22 22 0 0 0 -22-22zm0 41a19 19 0 1 1 19-19 19.021 19.021 0 0 1 -19 19z"/><path d="m24 7a17 17 0 1 0 17 17 17.019 17.019 0 0 0 -17-17zm-1 3a1 1 0 0 1 2 0v3a1 1 0 0 1 -2 0zm-10 15h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2zm12 13a1 1 0 0 1 -2 0v-3a1 1 0 0 1 2 0zm1.258-9.738-10.983 5.814a1 1 0 0 1 -1.351-1.351l5.813-10.981c.068-.128.151-.244.229-.364l6.654 6.654c-.12.078-.235.166-.362.228zm1.776-1.642-6.654-6.654c.119-.078.235-.161.362-.228l10.983-5.814a1 1 0 0 1 1.351 1.351l-5.813 10.981c-.063.128-.151.244-.229.364zm9.966-1.62h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2z"/></svg></a>';
            break;
        case 'Animated':
            image = '<a class="card__thumb"  ><svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="100%" height="100%" x="0" y="0" viewBox="0 0 384.008 384.008" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><path d="M367.204 174.672h-.08s-27.288 27.472-95.36 32.456c-1.336-42.848-36.52-77.168-79.72-77.168-43.272 0-78.464 34.32-79.8 77.168-68.072-4.984-95.36-32.456-95.36-32.456h-.08C25.508 85.6 100.692 16.008 192.044 16.008c91.272 0 166.448 69.592 175.16 158.664z" style="" fill="#000000" data-original="#00ffb0"></path><path d="M192.044 384.008c105.84 0 191.96-86.136 191.96-192 0-6.336-.288-12.672-.864-18.824V173.112C373.492 74.424 291.34 0 192.052 0 92.716 0 10.54 74.424.884 173.112v.048c0 .008 0 .016-.008.024a203.47 203.47 0 0 0-.872 18.824c0 105.864 86.152 192 192.04 192zm.008-352c79.816 0 146.336 57.696 158.16 135.568-.216.144-.464.304-.696.456a79.42 79.42 0 0 1-2.496 1.584c-.448.272-.904.544-1.376.832-1.088.64-2.288 1.312-3.56 2-.392.216-.744.416-1.152.632a117.964 117.964 0 0 1-5.656 2.768c-.424.192-.904.392-1.344.584-1.672.744-3.44 1.496-5.312 2.24-.744.296-1.512.584-2.288.88a145.55 145.55 0 0 1-5.712 2.024c-.8.264-1.568.536-2.392.8-2.84.904-5.816 1.784-9.008 2.616-.056.016-.112.024-.168.04-3.088.8-6.384 1.536-9.808 2.232-1.072.216-2.2.416-3.304.616a217.577 217.577 0 0 1-10.224 1.648c-.08-.392-.208-.776-.296-1.168-.248-1.12-.56-2.208-.848-3.304a93.04 93.04 0 0 0-1.496-5.216c-.368-1.128-.768-2.232-1.168-3.336a98.384 98.384 0 0 0-1.912-4.848 118.153 118.153 0 0 0-1.456-3.248 95.872 95.872 0 0 0-2.352-4.608c-.552-1.016-1.096-2.04-1.688-3.032-.904-1.528-1.872-3.008-2.856-4.488-.6-.904-1.184-1.816-1.816-2.696-1.144-1.584-2.36-3.104-3.6-4.616-.568-.688-1.088-1.416-1.672-2.088a94.51 94.51 0 0 0-5.832-6.176c-.2-.2-.432-.368-.632-.56a93.221 93.221 0 0 0-5.752-5.04c-.768-.616-1.576-1.176-2.368-1.768-1.48-1.12-2.968-2.232-4.512-3.264-.944-.632-1.92-1.208-2.888-1.808-1.464-.904-2.936-1.792-4.448-2.616a92.06 92.06 0 0 0-3.192-1.632 95.767 95.767 0 0 0-4.592-2.144 96.24 96.24 0 0 0-3.376-1.384 101.762 101.762 0 0 0-4.832-1.712c-1.152-.376-2.296-.752-3.464-1.08-1.712-.488-3.456-.896-5.208-1.296-1.128-.256-2.248-.536-3.392-.752-1.952-.368-3.936-.624-5.928-.872-.984-.12-1.96-.296-2.952-.384-3-.28-6.04-.44-9.12-.44-3.08 0-6.12.168-9.128.44-.992.088-1.952.264-2.936.384-2 .248-3.992.512-5.952.872-1.136.216-2.248.488-3.376.744a96.3 96.3 0 0 0-5.24 1.296c-1.16.328-2.288.696-3.432 1.072a93.055 93.055 0 0 0-4.888 1.728c-1.12.432-2.224.888-3.32 1.36a99.329 99.329 0 0 0-4.68 2.176c-1.048.52-2.088 1.04-3.112 1.592-1.552.84-3.056 1.744-4.544 2.664-.936.584-1.888 1.144-2.808 1.752-1.592 1.064-3.12 2.2-4.64 3.352-.744.568-1.52 1.096-2.248 1.68a95.625 95.625 0 0 0-5.992 5.248c-.128.128-.272.232-.408.36a93.751 93.751 0 0 0-5.872 6.216c-.544.632-1.032 1.304-1.56 1.944-1.272 1.552-2.536 3.12-3.712 4.752-.616.856-1.184 1.752-1.776 2.632-1 1.496-1.984 3-2.904 4.552-.576.976-1.112 1.976-1.656 2.976a98.27 98.27 0 0 0-2.384 4.664 88.99 88.99 0 0 0-1.44 3.208 92.269 92.269 0 0 0-1.928 4.88c-.4 1.104-.8 2.2-1.16 3.32a100.694 100.694 0 0 0-1.504 5.224c-.288 1.104-.6 2.192-.848 3.312-.088.4-.216.776-.304 1.176-.752-.104-1.504-.208-2.24-.32-2.76-.408-5.432-.856-8.016-1.336-1.096-.208-2.216-.4-3.28-.616-3.464-.704-6.808-1.448-9.928-2.256-.024-.008-.04-.008-.064-.016-3.192-.824-6.152-1.712-8.992-2.608-.848-.272-1.648-.552-2.472-.824a161.466 161.466 0 0 1-5.64-2c-.784-.296-1.576-.592-2.328-.896a142.491 142.491 0 0 1-5.312-2.24c-.432-.192-.904-.384-1.32-.576-2.04-.936-3.92-1.864-5.64-2.768-.416-.216-.776-.424-1.168-.64-1.272-.688-2.48-1.36-3.568-2a94.201 94.201 0 0 1-3.984-2.488c-.176-.12-.376-.248-.544-.36 11.808-77.88 78.36-135.576 158.232-135.576zm63.8 177.784c0 35.184-28.624 63.824-63.808 63.824-35.224 0-63.888-28.632-63.888-63.824l.008-1.048c.04-.368.064-.744.072-1.12 1.072-34.584 29.104-61.672 63.808-61.672 34.656 0 62.648 27.088 63.728 61.672.008.208.048.808.064 1.016.032.384.016.768.016 1.152zM34.5 204.472c.896.416 1.784.832 2.728 1.256 1.176.528 2.424 1.04 3.672 1.568.968.408 1.912.808 2.928 1.208 1.352.536 2.784 1.064 4.216 1.584 1.024.376 2.008.752 3.064 1.12 1.584.552 3.264 1.08 4.936 1.616 1.016.328 1.984.656 3.032.976 2.176.656 4.472 1.28 6.792 1.896.632.168 1.216.352 1.856.512a219.28 219.28 0 0 0 9.344 2.16c.976.208 2.032.376 3.032.576 2.312.456 4.624.904 7.048 1.304 1.368.224 2.824.408 4.224.616 1.832.272 3.616.568 5.512.808.192 1.528.512 3.008.776 4.512.2 1.168.36 2.352.6 3.504.44 2.08 1.008 4.104 1.584 6.128.256.896.448 1.816.728 2.704a96.777 96.777 0 0 0 3.112 8.488c.112.264.256.504.368.768a94.46 94.46 0 0 0 3.528 7.304c.48.896 1.04 1.736 1.544 2.616.984 1.696 1.968 3.392 3.056 5.016.656.992 1.384 1.928 2.08 2.888 1.04 1.44 2.072 2.88 3.192 4.264.792.976 1.632 1.904 2.456 2.848 1.128 1.288 2.256 2.56 3.448 3.784.896.92 1.832 1.8 2.768 2.688a98.503 98.503 0 0 0 3.712 3.368c1 .848 2.016 1.672 3.048 2.48a102.787 102.787 0 0 0 3.976 2.976 90.55 90.55 0 0 0 3.28 2.216c1.4.904 2.824 1.76 4.264 2.592a96.65 96.65 0 0 0 3.448 1.912c1.496.784 3.032 1.504 4.576 2.208 1.184.544 2.368 1.088 3.576 1.576 1.608.656 3.248 1.224 4.896 1.792 1.216.416 2.416.856 3.648 1.232 1.752.528 3.536.944 5.328 1.376 1.184.28 2.344.608 3.544.84 2.016.4 4.072.664 6.128.936 1.024.136 2.016.328 3.048.432 3.104.304 6.256.48 9.44.48 3.184 0 6.328-.176 9.432-.48 1.032-.096 2.024-.296 3.048-.432 2.056-.272 4.112-.544 6.128-.936 1.192-.24 2.352-.56 3.536-.84 1.792-.424 3.584-.848 5.328-1.376 1.232-.368 2.424-.808 3.64-1.224 1.648-.568 3.288-1.144 4.896-1.792 1.208-.496 2.384-1.04 3.568-1.576a96.233 96.233 0 0 0 4.576-2.208 89.638 89.638 0 0 0 3.44-1.904 96.706 96.706 0 0 0 4.28-2.6 90.983 90.983 0 0 0 7.248-5.192 90.136 90.136 0 0 0 3.024-2.464 93.679 93.679 0 0 0 3.728-3.392c.928-.88 1.856-1.752 2.744-2.672 1.2-1.232 2.336-2.52 3.464-3.816.816-.936 1.648-1.848 2.432-2.816 1.128-1.392 2.168-2.848 3.224-4.304.68-.952 1.4-1.872 2.048-2.848 1.096-1.648 2.088-3.36 3.088-5.072.496-.856 1.04-1.68 1.512-2.56a98.623 98.623 0 0 0 3.576-7.408c.096-.224.224-.44.32-.664 1.168-2.768 2.2-5.6 3.112-8.488.28-.888.472-1.808.728-2.704.568-2.024 1.136-4.04 1.576-6.112.248-1.168.408-2.368.608-3.552.256-1.496.584-2.96.768-4.48 1.656-.208 3.2-.472 4.8-.704 1.584-.232 3.208-.44 4.744-.696 1.992-.328 3.888-.696 5.808-1.064 1.392-.264 2.832-.504 4.184-.792 2.04-.424 3.976-.896 5.928-1.352 1.104-.264 2.272-.504 3.344-.776 2.576-.656 5.04-1.344 7.448-2.048.368-.104.776-.208 1.144-.312a201.456 201.456 0 0 0 7.912-2.544c.776-.272 1.48-.552 2.24-.824 1.704-.616 3.408-1.224 5-1.848.896-.352 1.704-.704 2.568-1.056 1.368-.56 2.744-1.12 4.032-1.688.856-.376 1.64-.752 2.464-1.136.952-.44 1.96-.88 2.864-1.32-5.904 82.864-75.2 148.48-159.536 148.48-84.376 0-153.712-65.616-159.632-148.496.656.32 1.4.64 2.08.96z" style="" fill="#000000" data-original="#000a64" class=""></path><path d="M192.012 158.696c-28.16 0-51.064 22.92-51.064 51.096 0 28.168 22.912 51.08 51.064 51.08 28.16 0 51.072-22.912 51.072-51.08.008-28.176-22.904-51.096-51.072-51.096zm0 70.168c-10.512 0-19.064-8.552-19.064-19.08s8.552-19.096 19.064-19.096c10.52 0 19.072 8.56 19.072 19.096.008 10.528-8.552 19.08-19.072 19.08z" style="" fill="#000000" data-original="#000a64" class=""></path></g></svg></a>';
            break;
        case 'Comedy':
            image = '<a class="card__thumb"  ><svg id="Glyph" height="100%" viewBox="0 0 32 32" width="100%" xmlns="http://www.w3.org/2000/svg"><path id="XMLID_3129_" d="m22.987 2.069c-5.867 4.73-12.597 7.133-20.191 7.21-.19.002-.332.169-.291.354.478 2.161 3.128 13.625 6.129 16.371 2.506 2.293 9.956 4.863 13.177 3.713s7.244-7.815 7.661-11.152c.5-4.001-4.999-14.477-6.038-16.413-.089-.165-.302-.2-.447-.083zm-15.059 15.696c-.053.036-.129-.001-.13-.065-.032-1.473.689-3.251 2.304-3.839 1.871-.681 3.548.225 4.469 1.376.04.05.008.127-.056.134-.54.06-2.438.29-3.495.646-.96.322-2.626 1.431-3.092 1.748zm12.111 7.348c-2.772 1.009-5.824-.076-6.891-1.552-.041-.057.012-.132.082-.122 1.792.252 3.74-.395 5.785-1.139s3.954-1.501 5.164-2.846c.047-.053.136-.029.141.041.131 1.816-1.509 4.609-4.281 5.618zm4.563-13.409c-.585.08-2.815.393-3.501.643-.685.249-2.596 1.443-3.095 1.758-.054.034-.125-.004-.126-.068-.036-1.474.666-3.249 2.539-3.931 1.617-.589 3.316.313 4.237 1.465.039.049.008.124-.054.133z"/></svg></a>';
            break;
        case 'Crime':
            image = '<a class="card__thumb"  ><svg id="Capa_1" enable-background="new 0 0 507.994 507.994" height="100%" viewBox="0 0 507.994 507.994" width="100%" xmlns="http://www.w3.org/2000/svg"><g><path d="m276.33 199.503v-17.137l-22.333-14.635-22.333 14.635v17.137c0 15.346 8.791 29.096 22.333 35.64 13.542-6.544 22.333-20.294 22.333-35.64z"/><path d="m450.33 316.131v-.351l57.664-60.79-40.201-107.597-8.188-1.637c-72.992-14.599-144.866-48.074-192.261-89.544l-13.348-11.681-13.347 11.68c-47.396 41.471-119.27 74.946-192.262 89.545l-8.188 1.637-40.199 107.597 57.664 60.79v.351zm-248.666-116.628v-33.346l52.333-34.293 52.333 34.293v33.346c0 30.005-19.125 56.539-47.59 66.028l-4.743 1.581-4.743-1.581c-28.465-9.489-47.59-36.023-47.59-66.028z"/><path d="m57.664 346.131v27.667c0 49.442 40.224 89.667 89.666 89.667h213.334c49.442 0 89.666-40.224 89.666-89.667v-27.667z"/></g></svg></a>';
            break;
        case 'Documentary':
            image = '<a class="card__thumb"  ><svg enable-background="new 0 0 512 512" height="100%" viewBox="0 0 512 512" width="100%" xmlns="http://www.w3.org/2000/svg"><g id="_x30_6_Natural_Product"><path d="m481.212 20.855c-1.375-10.584-10.933-18.023-21.531-16.756-33.56 4.013-104.68 18.335-144.047 68.895-41.854 53.755-35.142 132.293-30.602 162.378-10.695 32.231-16.875 66.764-20.382 97.902-6.199-36.244-20.259-78.418-51.22-108.934-49.429-48.72-127.865-53.99-164.481-53.528-11.558.146-20.764 9.49-20.737 21.049.087 36.605 6.528 114.91 55.952 163.626 52.762 52.005 138.568 54.49 171.206 53.362 7.056 24.909 9.584 54.688 4.591 90.171-.665 4.733 2.994 9.021 7.851 9.021 3.884 0 7.273-2.858 7.83-6.814 3.626-25.766-1.538-49.281 6.04-75.917 24.423.127 79.7-3.723 113.804-38.321 33.443-33.928 37.063-87.766 36.746-112.899-.1-7.934-6.513-14.253-14.447-14.234-25.125.059-78.874 4.481-112.314 38.405-11.702 11.871-19.726 26.187-25.234 40.854 3.122-29.198 8.56-61.646 17.884-92.073 29.015-2.654 109.029-14.827 151.67-69.594 39.37-50.565 35.778-123.063 31.421-156.593z"/></g></svg></a>';
            break;
        case 'Drama':
            image = '<a class="card__thumb"  ><svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="100%" height="100%" x="0" y="0" viewBox="0 0 489.152 489.152" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><path d="M488.811 168.756a434.91 434.91 0 0 0-205.21-26.79 434.388 434.388 0 0 0-109.45 26.79c0 112.57-15.2 278.04 157.33 318.73 172.53-40.69 157.33-206.16 157.33-318.73zm-271.97 89.79c3.52-5.12 7.84-9.65 12.79-13.38 7.94 6 17.51 9.98 27.92 11.15 2.13.25 4.3.37 6.49.37 12.91 0 24.83-4.29 34.41-11.52 4.95 3.73 9.27 8.26 12.78 13.38-10.31 15.03-27.6 24.89-47.19 24.89-2.15 0-4.27-.12-6.36-.36-16.95-1.87-31.66-11.15-40.84-24.53zm114.63 105.03c-21.59 0-41.93 5.36-59.75 14.81a127.98 127.98 0 0 0-28.98 21.04c1.2-20.37 9.24-38.89 21.87-53.3 16.29-18.59 40.2-30.32 66.86-30.32 47.33 0 86 36.98 88.73 83.62-22.98-22.19-54.25-35.85-88.73-35.85zm67.44-80.14c-19.6 0-36.89-9.86-47.19-24.89 3.51-5.12 7.83-9.65 12.78-13.38a56.89 56.89 0 0 0 34.41 11.52c12.92 0 24.84-4.29 34.42-11.52 4.95 3.73 9.27 8.26 12.78 13.38-10.31 15.03-27.6 24.89-47.2 24.89z" style="" fill="#000000" data-original="#91cdf2" class=""></path><path d="M331.481 487.486c-172.53-40.69-157.33-206.16-157.33-318.73a434.388 434.388 0 0 1 109.45-26.79c-17.03 32.95-24.86 73.13-26.05 114.35a56.781 56.781 0 0 1-27.92-11.15 57.642 57.642 0 0 0-12.79 13.38c9.18 13.38 23.89 22.66 40.84 24.53.81 21.38 3.23 42.68 6.93 63.05-12.63 14.41-20.67 32.93-21.87 53.3 8.59-8.3 18.34-15.4 28.98-21.04 14 53.73 36.53 96.41 59.76 109.1z" style="" fill="#000000" data-original="#4bb0e3" class=""></path><path d="M315.001 31.106a434.91 434.91 0 0 0-157.33-29.44c-21.65 0-43.3 1.61-64.75 4.84v.01a434.007 434.007 0 0 0-92.58 24.59c0 111.3-14.86 274.31 151.56 317.3 1.9.5 3.82.97 5.77 1.43 172.53-40.69 157.33-206.16 157.33-318.73zm-271.97 91.3c7.49-10.92 18.66-19.11 31.73-22.76a56.827 56.827 0 0 1 15.47-2.13c19.6 0 36.89 9.86 47.19 24.89a57.394 57.394 0 0 1-12.78 13.38 56.89 56.89 0 0 0-34.41-11.52c-5.37 0-10.56.74-15.48 2.12a56.985 56.985 0 0 0-18.94 9.4 57.394 57.394 0 0 1-12.78-13.38zm114.64 151.32c-22.02 0-42.49-6.66-59.49-18.08-26.95-18.07-45.21-48.1-47.23-82.49a154.22 154.22 0 0 0 31.92 23.71c22.14 12.36 47.64 19.41 74.8 19.41 41.46 0 79.07-16.43 106.71-43.12-3.28 56.09-49.8 100.57-106.71 100.57zm101.84-137.94a56.89 56.89 0 0 0-34.41-11.52c-12.91 0-24.83 4.29-34.41 11.52a57.394 57.394 0 0 1-12.78-13.38c10.31-15.03 27.6-24.89 47.19-24.89 19.6 0 36.89 9.86 47.2 24.89a57.642 57.642 0 0 1-12.79 13.38z" style="" fill="#757575" data-original="#ffe257" class=""></path><path d="M151.901 348.406c-166.42-42.99-151.56-206-151.56-317.3a434.007 434.007 0 0 1 92.58-24.59c-11.47 29.06-16.97 60.91-18.16 93.13-13.07 3.65-24.24 11.84-31.73 22.76 3.51 5.12 7.83 9.65 12.78 13.38 5.6-4.23 12-7.45 18.94-9.4.79 23.99 3.73 47.82 8.12 70.48a154.22 154.22 0 0 1-31.92-23.71c2.02 34.39 20.28 64.42 47.23 82.49 16.25 49.16 37.71 85.29 53.72 92.76z" style="" fill="#757575" data-original="#ffad42" class=""></path></g></svg></a>';
            break;
        case 'Family':
            image = '<a class="card__thumb"  ><svg id="Capa_1" enable-background="new 0 0 511.941 511.941" height="100%" viewBox="0 0 511.941 511.941" width="100%" xmlns="http://www.w3.org/2000/svg"><g><path d="m120.971 0c-33.091 0-60 26.909-60 60s26.909 61 60 61 60-27.909 60-61-26.909-60-60-60z"/><path d="m450.971 60c0-33.091-26.909-60-60-60s-60 26.909-60 60 26.909 61 60 61 60-27.909 60-61z"/><path d="m175.166 455.08c34.915 29.297 43.51 37.55 52.855 45.495 8.906 7.573 20.024 11.367 31.143 11.367 11.221 0 22.441-3.867 31.348-11.572 16.271-14.086 33.904-30.339 49.763-44.242-8.513-2.86-16.531-7.425-23.22-14.121-17.811-17.789-22.758-44.738-11.499-68.324-30.586-16.192-68.529-16.15-99.131.068 11.204 23.558 6.266 50.475-11.552 68.271-5.778 5.775-12.502 10.133-19.707 13.058z"/><circle cx="255.971" cy="271" r="30"/><path d="m255.971 192.25c-20.537-37.002-55.986-69.038-106.26-69.038-69.141 0-121.274 56.045-121.274 130.356 0 65.643 44.645 113.774 115.203 174.664 10.386 3.122 22.026.551 30.037-7.438 12.292-12.261 11.296-32.223-1.216-43.594-64.395-58.506-84.023-85.735-84.023-116.233h30c0 18.898 18.433 42.793 69.009 89.208 41.719-24.481 95.347-24.428 137.051.002 50.574-46.415 69.009-70.312 69.009-89.21h30c0 30.498-19.629 57.727-84.023 116.233-12.442 11.309-13.566 31.274-1.23 43.579 10.115 10.087 25.86 11.224 37.712 3.517 75.026-68.353 107.542-110.757 107.542-170.729 0-74.312-52.134-130.356-121.274-130.356-50.292.001-85.726 32.037-106.263 69.039zm60 78.75c0 33.091-26.909 60-60 60s-60-26.909-60-60 26.909-60 60-60 60 26.909 60 60z"/></g></svg></a>';
            break;
        case 'Fantasy':
            image = '<a class="card__thumb"  ><svg id="Capa_1" enable-background="new 0 0 512.018 512.018" height="100%" viewBox="0 0 512.018 512.018" width="100%" xmlns="http://www.w3.org/2000/svg"><g><path d="m509.079 129.751-31.483-42.766 18.673-52.05c4.273-11.911-7.273-23.457-19.184-19.185l-52.052 18.672-42.764-31.483c-9.835-7.243-23.775-.278-23.892 11.936l-.525 54.805-45.602 32.75c-10.147 7.288-7.432 23.103 4.565 26.588l51.285 14.899 14.9 51.286c3.489 12.008 19.293 14.72 26.588 4.564l32.75-45.602 54.805-.524c12.215-.115 19.178-14.054 11.936-23.89z"/><path d="m176.607 297.412c-5.857-5.857-15.355-5.857-21.213 0l-24.394 24.393 59.213 59.213 24.394-24.394c5.858-5.857 5.858-15.355 0-21.213z"/><path d="m4.394 448.412c-5.858 5.857-5.858 15.355 0 21.213l38 38c5.858 5.858 15.355 5.858 21.213 0l105.393-105.394-59.213-59.213z"/><path d="m327.456 163.35-121.243 121.242 21.213 21.213 121.243-121.243-4.775-16.436z"/></g></svg></a>';
            break;
        case 'History':
            image = '<a class="card__thumb"  ><svg id="Layer_1" enable-background="new 0 0 68 68" height="100%" viewBox="0 0 68 68" width="100%" xmlns="http://www.w3.org/2000/svg"><g><path d="m64.13152 44.01507c-1.39844-.97461-3.05079-1.33496-4.50879-1.65234-.53906-.12402-1.07227.22461-1.18945.76367-.11816.53906.22363 1.07227.76367 1.18945 1.33691.29199 2.71973.59375 3.79199 1.33984.82813.57715 1.61329 1.68457 1.37793 2.75293-.33789 1.53613-2.53614 2.21875-3.81739 2.48926-4.50879.95313-9.2627.91016-13.85547.87207-2.65723-.02246-5.40625-.0459-8.11133.11816-2 .12207-4.08984.38965-5.81836 1.51074-1.78418 1.15625-3.21972 3.63281-2.36621 5.94629.16504.44629.3916.83008.61133 1.20215.28027.47656.52246.8877.53516 1.2666.0166.50684-.41602 1-.85156 1.26367-.59766.36133-1.36621.50781-2.16895.63965-8.00983 1.31348-16.92712 1.53613-24.64526.63098.37848-1.95868 1.08679-4.09418 2.14734-6.48566 1.67352-.03796 3.5152-.25623 5.4967-.66339 5.78998-1.15997 11.58997-3.76001 16.76001-7.52002 1.88995-1.35999 3.73999-2.78998 5.5-4.25995.15997-.13.21997-.35004.15997-.55005-.07001-.19-.25-.32996-.46002-.33997-1.73999-.06-4.15997-.41003-6.63-1.54004 2.82001.05005 7.83002-.25 12.27002-2.33997.04999-.02002.09003-.04999.13-.09003 3.06-2.90997 5.90997-6.01001 8.47998-9.20996.12-.14001.14001-.35004.06-.52002-.07996-.16998-.25-.28998-.44-.28998-1.59998-.02002-4.50995-.30005-7.46997-1.78003 2.70001-.19 7.98999-.72998 11.27002-2.07001.08997-.02997.15997-.08997.21997-.16998 3.35999-4.79999 6.13-9.77002 8.25-14.77002.06-.13995.04999-.29999-.02002-.44-.07996-.13-.19995-.21997-.34998-.25-1.73999-.32001-3.48999-.37-4.78998-.32996 2.19995-1.12 4.33997-1.49005 5.88995-1.59003.19-.02002.36005-.14001.43005-.33002 1.37-3.67999 1.81-5.88995 1.81995-5.97998.05005-.23999-.07996-.46997-.29999-.56-.27997-.10999-6.95996-2.72003-17.38.25-.09998.02997-.17999.08002-.23999.15997-2.02997 2.37-3.46997 5.52002-4.27002 7.57001-.08997-1.79999.08002-3.65997.51001-5.52997.04999-.17999-.01996-.37-.15997-.48999s-.34003-.15002-.51001-.08002c-3.78003 1.57001-7.54999 3.72998-11.21002 6.41998-.06.04004-.09998.10004-.13995.16003-1.73004 3.06-2.26001 7.31995-2.42004 9.88995-.69995-1.85999-1.10999-3.87-1.22998-6-.01001-.19-.13-.35999-.29999-.42999-.17999-.07996-.38-.03998-.53003.08002-2.16998 1.89002-4.38 4.04999-6.57996 6.40997-.03003.03003-.05005.06-.07001.10004-1.75 3.06-2.27002 7.35999-2.42999 9.92999-.54004-1.42999-.91003-2.96002-1.11005-4.56-.01996-.20001-.15997-.37-.34998-.41998-.20001-.05005-.40002.00995-.53003.15997-2.46997 3.04999-4.92999 6.40002-7.31 9.98999-2.32996 3.48004-3.79999 7.26001-4.26996 10.91998-.52002 4.05005.15997 6.85004.92999 8.59003 13.45001-29.13 36.69-37.73999 36.91998-37.82001.52002-.19 1.09003.08002 1.28003.60004.19.51996-.08002 1.08997-.60004 1.27997-.22998.08002-22.75 8.46002-35.82001 36.85999-.17999.40002-.34998.80005-.5 1.17999.00568.00616.01068.01154.01617.01746-1.20551 2.79706-1.94873 5.27808-2.26788 7.56805-.07617.54688.30469 1.05176.85254 1.12793.00232.00037.00458.00043.0069.00073l-.00004.00029c3.49316.46289 7.25098.69238 11.08105.69238 5.08496 0 10.29688-.40527 15.17578-1.20508.96289-.15723 1.97754-.35645 2.88086-.90234 1.1582-.70117 1.85351-1.86621 1.81445-3.04004-.02832-.88965-.44434-1.59473-.81055-2.2168-.18262-.30957-.35449-.60156-.45703-.87988-.47656-1.28906.42773-2.83008 1.57715-3.5752 1.4082-.91211 3.24316-1.09375 4.85254-1.19238 2.63574-.16016 5.34863-.13672 7.97266-.11426 4.70117.04004 9.56445.08203 14.28516-.91504 3.06934-.64746 4.92188-2.03711 5.35743-4.0166.43554-1.97655-.78516-3.84667-2.18848-4.82323z"/></g></svg></a>';
            break;
        case 'Horror':
            image = '<a class="card__thumb"  ><svg id="Halloween_icon" height="100%" viewBox="0 0 512 512" width="100%" xmlns="http://www.w3.org/2000/svg" data-name="Halloween icon"><path id="halloween_pumpkin" d="m444.3 109.108c-37.98-28.485-60.423-18.126-103.581 0-12.085-18.126-31.075-19.853-51.791-9.5-8.632-6.042-14.674-14.674-12.084-31.074s27.621-36.253 27.621-36.253-.863-5.18-13.811-16.4c-39.706 13.811-73.37 78.549-73.37 78.549s-1.726 5.179-5.179 4.316c-12.947-9.5-35.39-6.042-56.106 10.358-33.664-19.853-56.97-20.716-94.95 6.906s-65.603 99.269-60.424 167.46 39.706 141.561 88.907 182.993 83.728 29.348 113.076 12.085c27.622 25.895 71.644 18.99 88.044-.863 0 0 6.043 8.632 18.99 14.674 25.9 8.632 66.465 3.452 111.35-26.759s86.318-119.981 90.634-195.078-29.348-132.929-67.326-161.414zm-34.529 79.412s-21.58 96.676-42.3 98.4c-28.438 2.369-56.97-17.264-85.454-25.033 11.225-4.312 127.754-73.367 127.754-73.367zm-192.489 70.78c-31.937 11.221-54.38 27.622-71.643 30.211s-40.57-50.927-44.885-100.992c18.126 18.991 100.128 63.881 116.528 70.781zm157.962 141.562-25.032-14.674-52.654 43.159-48.338-30.211-44.885 25.032-41.435-44.022-25.895 25.032-56.97-77.686c2.59 1.726 57.833 37.669 57.833 37.669l40.569-18.99 31.075 37.807 43.159-32.8 37.116 32.8 40.57-37.807 31.943 20.716 66.465-36.805zm-.051-275.019c28.319-18.71 76.972-5.325 98.978 78.322-30.124-53.365-56.805-81.765-98.978-78.322z" data-name="halloween pumpkin"/></svg></a>';
            break;
        case 'Music':
            image = '<a class="card__thumb"  ><svg id="Capa_1" enable-background="new 0 0 415.963 415.963" viewBox="0 0 415.963 415.963" xmlns="http://www.w3.org/2000/svg"><path d="m328.712 264.539c12.928-21.632 21.504-48.992 23.168-76.064 1.056-17.376-2.816-35.616-11.2-52.768-13.152-26.944-35.744-42.08-57.568-56.704-16.288-10.912-31.68-21.216-42.56-35.936l-1.952-2.624c-6.432-8.64-13.696-18.432-14.848-26.656-1.152-8.32-8.704-14.24-16.96-13.76-8.384.576-14.88 7.52-14.88 15.936v285.12c-13.408-8.128-29.92-13.12-48-13.12-44.096 0-80 28.704-80 64s35.904 64 80 64 80-28.704 80-64v-186.496c24.032 9.184 63.36 32.576 74.176 87.2-2.016 2.976-3.936 6.176-6.176 8.736-5.856 6.624-5.216 16.736 1.44 22.56 6.592 5.888 16.704 5.184 22.56-1.44 4.288-4.864 8.096-10.56 11.744-16.512.384-.448.737-.928 1.056-1.472z"/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/></svg></a>';
            break;
        case 'Mystery':
            image = '<a class="card__thumb"  ><svg id="Layer_1" enable-background="new 0 0 512 512" height="100%" viewBox="0 0 512 512" width="100%" xmlns="http://www.w3.org/2000/svg"><g id="_x32_4_Pipe"><g><g><path d="m377.011 241.497s0 .053-.053.053c-15.734 44.695-72.321 192.75-139.095 221.07-39.439 16.768-82.495 20.97-120.215 1.013-42.668-22.56-73.441-72.854-91.681-149.548 1.221-.305 165.962-61.922 169.015-63.521l18.294 32.694c8.138 16.263 22.608 20.27 41.227.694 51.264-53.683 46.35-83.754 66.828-82.507 12.32.533 35.628 4.48 52.694 24.694 3.573 4.212 4.747 10.078 2.986 15.358z"/></g><g><path d="m187.729 242.191-163.628 61.333c-9.201 3.4-18.153.189-22.187-8.32-5.12-10.827-.32-27.521 18.72-38.453 56.534-32.801 126.829-51.148 148.695-51.788 19.36-.694 28.213 8.267 29.92 16.853 1.707 8.642-3.147 17.228-11.52 20.375z"/></g><g><path d="m512 50.669c0 6.4-3.84 12.106-9.814 14.453-26.401 10.401-89.335 45.654-122.295 151.576-19.36-21.067-44.32-25.28-57.76-25.921 17.974-35.2 72.747-126.561 169.922-155.095 10.011-2.967 19.947 4.626 19.947 14.987z"/></g></g></g></svg></a>';
            break;
        case 'Romance':
            image = '<a class="card__thumb"  ><svg id="Capa_1" enable-background="new 0 0 512 512" height="100%" viewBox="0 0 512 512" width="100%" xmlns="http://www.w3.org/2000/svg"><g><path d="m290.468 295.992c0-43.541-35.297-78.838-78.838-78.838-27.865 0-52.353 14.457-66.375 36.279-14.021-21.822-38.509-36.279-66.375-36.279-43.541 0-78.838 35.297-78.838 78.838 0 0-6.591 86.092 145.213 184.631 151.804-98.539 145.213-184.631 145.213-184.631z"/><path d="m511.941 141.691c0-60.925-49.39-110.315-110.315-110.315-38.991 0-73.256 20.229-92.875 50.764-19.619-30.535-53.884-50.764-92.875-50.764-60.925 0-110.315 49.39-110.315 110.315 0 0-1.497 19.602 10.652 52.038 10.441 3.799 20.237 9.161 29.042 15.947 18.733-14.439 41.912-22.522 66.375-22.522 29.072 0 56.403 11.321 76.96 31.878 20.362 20.362 31.663 47.371 31.875 76.135.315 7.589-.303 33.397-18.974 69.861-3.712 7.248-7.933 14.491-12.631 21.708 6.406 4.414 13.031 8.849 19.892 13.302 212.411-137.882 203.189-258.347 203.189-258.347z"/></g></svg></a>';
            break;
        case 'Sci fi':
            image = '<a class="card__thumb"  ><svg id="Layer_1" enable-background="new 0 0 24 24" height="100%" viewBox="0 0 24 24" width="100%" xmlns="http://www.w3.org/2000/svg"><path d="m12 1.8c4.7 0 8.5 3.8 8.5 8.5 0 6.5-5.5 12-8.5 12s-8.5-5.5-8.5-12c0-4.7 3.8-8.5 8.5-8.5zm5.5 10c-2.5 0-4.5 2-4.5 4.5v.5c2.5.3 4.7-1.5 4.9-4 0-.3 0-.6 0-1-.1 0-.2 0-.4 0zm-11 0c-.2 0-.3 0-.5 0-.3 2.5 1.5 4.7 4 4.9h1c.3-2.5-1.5-4.7-4-4.9-.2 0-.3-.1-.5 0z"/></svg></a>';
            break;
        case 'TV Movie':
            image = '<a class="card__thumb"  ><svg height="100%" viewBox="0 0 64 64" width="100%" xmlns="http://www.w3.org/2000/svg"><g id="TV_Show" data-name="TV Show"><path d="m34.4 17.50066h-8.8a4.49313 4.49313 0 0 1 2.19-3.01 4.37275 4.37275 0 0 1 2.21-.59 4.46125 4.46125 0 0 1 2.15.55 4.50471 4.50471 0 0 1 2.25 3.05z"/><path d="m43.32 6.50066-8.21 7.88a6.33048 6.33048 0 0 0 -1.47-1.36l8.29-7.96a1.00072 1.00072 0 1 1 1.39 1.44z"/><path d="m17.96 5.06066 8.34 8a6.17526 6.17526 0 0 0 -1.46 1.38l-8.26-7.94a.99725.99725 0 1 1 1.38-1.44z"/><path d="m12.02 56.50066h4.17l-.32 2.22a.47064.47064 0 0 1 -.42.5h-3.33a.47064.47064 0 0 1 -.42-.5z"/><path d="m52.3 58.7207a.47064.47064 0 0 1 -.42.5l-3.33-.01a.46418.46418 0 0 1 -.42-.5l-.32-2.21h4.17z"/><path d="m24.952 41.917 8.05-4.92-8.05-4.92z"/><path d="m44.5835 24.49694h-31.875a1.001 1.001 0 0 0 -1 1v23a1.001 1.001 0 0 0 1 1h31.875a1.001 1.001 0 0 0 1-1v-23a1.001 1.001 0 0 0 -1-1zm-9.99268 13.87306-9.19043 5.61719h-.00049a1.60917 1.60917 0 0 1 -2.44824-1.373v-11.23444a1.60917 1.60917 0 0 1 2.44824-1.373l9.19141 5.61718a1.60891 1.60891 0 0 1 -.00049 2.7461z"/><circle cx="51.584" cy="34.434" r="1"/><path d="m52 19.50066h-40a4.99545 4.99545 0 0 0 -5 5v25a5.00181 5.00181 0 0 0 5 5h40a5.00181 5.00181 0 0 0 5-5v-25a4.99545 4.99545 0 0 0 -5-5zm-4.4165 28.99628a3.00328 3.00328 0 0 1 -3 3h-31.875a3.00328 3.00328 0 0 1 -3-3v-23a3.00328 3.00328 0 0 1 3-3h31.875a3.00328 3.00328 0 0 1 3 3zm6 .9375h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm0-4h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm0-4h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm-2-4a3 3 0 1 1 3-3 3.00328 3.00328 0 0 1 -3 3zm0-6.875a3 3 0 1 1 3-3 3.00328 3.00328 0 0 1 -3 3z"/><circle cx="51.584" cy="27.559" r="1"/></g></svg></a>';
            break;
        case 'Thriller':
            image = '<a class="card__thumb"  ><svg id="Layer_1_5_" enable-background="new 0 0 48 48" height="100%" viewBox="0 0 48 48" width="100%" xmlns="http://www.w3.org/2000/svg"><path d="m35.996 25.445c-17.324 17.143-25.503 18.591-32.995 18.59-.405 0-.77-.243-.924-.617-.155-.373-.069-.804.217-1.09l25.293-25.293zm3.426-20.245-10.422 10.421 4.914 4.914 9.422-9.422h1c.265 0 .519-.105.707-.293 1.55-1.55 1.55-4.071 0-5.621-1.55-1.549-4.071-1.549-5.621.001z"/></svg></a>';
            break;
        case 'War':
            image = '<a class="card__thumb"  ><svg id="solid" height="100%" viewBox="0 0 64 64" width="100%" xmlns="http://www.w3.org/2000/svg"><path d="m6.5 22h4v-1h11.7143l-.5714 1h16.2857l-1.4286-5h-12l-1.1428 2h-12.8572v-1h-4a2 2 0 0 0 0 4z"/><path d="m53.5 20h-6a2 2 0 0 0 -2 2h10a2 2 0 0 0 -2-2z"/><path d="m23.6016 30.7461a.7393.7393 0 0 1 .4077-.083l36.7314.3342-1.7493-6.9973h-42l-5 5-7.9414.7941 10.9468 4.6913z"/><path d="m24.2036 32.665-8.8052 3.8262a.9906.9906 0 0 1 -.3984.083 1.0035 1.0035 0 0 1 -.394-.081l-11.326-4.8532 9.7114 12.36h1.0886a6.9906 6.9906 0 0 1 13.84 0h1.16a6.9906 6.9906 0 0 1 13.84 0h1.16a6.9906 6.9906 0 0 1 13.84 0h1.0713l1.8337-11.0017z"/><path d="m21 40a5 5 0 1 0 5 5 5 5 0 0 0 -5-5zm.0086 6a1 1 0 1 1 1-1 1 1 0 0 1 -1 1z"/><path d="m36 40a5 5 0 1 0 5 5 5 5 0 0 0 -5-5zm.0086 6a1 1 0 1 1 1-1 1 1 0 0 1 -1 1z"/><path d="m51 40a5 5 0 1 0 5 5 5 5 0 0 0 -5-5zm.0086 6a1 1 0 1 1 1-1 1 1 0 0 1 -1 1z"/></svg></a>';
            break;
        case 'Western':
            image = '<a class="card__thumb"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 192" width="100%" height="100%"><g id="_02-horseshoe" data-name="02-horseshoe"><g id="Glyph"><path d="M160.544,32H172a4,4,0,0,0,4-4V4a4,4,0,0,0-4-4H128a16.005,16.005,0,0,0-11.4,27.225C117.771,28.546,152,67.721,152,108c0,31.26-33.706,52-56,52s-56-20.74-56-52c0-40.2,34.149-79.364,35.386-80.759A16,16,0,0,0,64,0H20a4,4,0,0,0-4,4V28a4,4,0,0,0,4,4H31.456C19.858,50.87,8,79.826,8,108c0,24.623,11.539,48.985,30.115,63.582C54.387,184.367,76.027,192,96,192s41.613-7.633,57.885-20.419C172.461,156.985,184,132.623,184,108,184,79.826,172.142,50.87,160.544,32ZM40,40a8,8,0,1,1-8,8A8,8,0,0,1,40,40ZM16,96a8,8,0,1,1,8,8A8,8,0,0,1,16,96Zm16,56a8,8,0,1,1,8-8A8,8,0,0,1,32,152Zm32,24a8,8,0,1,1,8-8A8,8,0,0,1,64,176Zm64,0a8,8,0,1,1,8-8A8,8,0,0,1,128,176ZM144,48a8,8,0,1,1,8,8A8,8,0,0,1,144,48Zm16,104a8,8,0,1,1,8-8A8,8,0,0,1,160,152Zm8-48a8,8,0,1,1,8-8A8,8,0,0,1,168,104Z"/></g></g></svg></a>';
            break;
        default:
            image = '<a class="card__thumb"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="navy" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></a>';
            break;
    }
    return image;
}


function getYear(date) {
    const year = new Date(date);
    // If it's not a number just display '-'
    if (isNaN(year.getFullYear())) {
        return '-'
    } else {
        return year.getFullYear();
    }
}

function getPoster(imgPath, movie) {
    // If it doesn't have a poster display default poster image
    if (!movie) {
        return 'images/icons/no-photos.png';
    } else {
        return imgPath + movie;
    }
}

// Depending on the input assign an ID
function assignID() {
    if (genreInput.value === 'Action') {
        genreID = 28;
    } else if (genreInput.value === 'Adventure') {
        genreID = 12;
    } else if (genreInput.value === 'Animated') {
        genreID = 16;
    } else if (genreInput.value === 'Comedy') {
        genreID = 35;
    } else if (genreInput.value === 'Crime') {
        genreID = 80;
    } else if (genreInput.value === 'Documentary') {
        genreID = 99;
    } else if (genreInput.value === 'Drama') {
        genreID = 18;
    } else if (genreInput.value === 'Family') {
        genreID = 10751;
    } else if (genreInput.value === 'Fantasy') {
        genreID = 14;
    } else if (genreInput.value === 'History') {
        genreID = 36;
    } else if (genreInput.value === 'Horror') {
        genreID = 27;
    } else if (genreInput.value === 'Music') {
        genreID = 10402;
    } else if (genreInput.value === 'Mystery') {
        genreID = 9648;
    } else if (genreInput.value === 'Romance') {
        genreID = 10749;
    } else if (genreInput.value === 'Sci fi') {
        genreID = 878;
    } else if (genreInput.value === 'TV Movie') {
        genreID = 10770;
    } else if (genreInput.value === 'Thriller') {
        genreID = 53;
    } else if (genreInput.value === 'War') {
        genreID = 10752;
    } else if (genreInput.value === 'Western') {
        genreID = 37;
    }
}

function displayMatchUI() {
    /*nameValue.textContent = nameInput.value;*/
    /*document.querySelector('#genre-value').textContent = genreInput.value;*/
    matchUI.classList.remove('none');
    startUI.style.display = 'none';
    Thisismatch.style.display = 'none';
    footerUi.style.display = "none";
}

function displayStartUI() {
    matchUI.classList.add('none');
    startUI.style.display = 'block';
    Thisismatch.style.display = 'none';
    footerUi.style.display = "none";
}

function displayMatch(movie) {
    matchUI.classList.add("none");
    startUI.style.display = "none";
    Thisismatch.style.display = "block";
    footerUi.style.display = "block";
    const movieTitle = movie.title;


    Thisismatch.innerHTML = `
      <center>
        <div class="NTMatch">
        <div class="itsmatch_logo">
        <img class="center itsmatch_imglogo" src='images/popcorn-logo.png'>
        </div>
        </div>
        <div class="NTMText">
          <h1>This is a match</h1>
          <h3>You and ${movieTitle}<br> have liked each other.</h3>
          <button class="button_returnback">Return back</button>
            <div class="share">
                <span>Share</span>
                <nav>
                    <a href="#"><i class="fa fa-twitter"></i></a>
                    <a href="#"><i class="fa fa-facebook"></i></a>
                    <a href="#"><i class="fa fa-google"></i></a>
                    <a href="#"><i class="fa fa-github"></i></a>
                </nav>
            </div>
        </div>
        <div class="heart-container"></div> <!-- new div to contain heart animations -->
      </center>
    `;
    setInterval(createheart, 150); // start heart animations
    /*return back*/
    document.querySelector('.button_returnback').addEventListener('click', (e) => {
        e.preventDefault();
        document.querySelector('.thisismatch').style.display = 'none';
        document.querySelector('.start-ui').style.display = 'block';
    });
}

/*Test slider beguinning*/
var swiper = new Swiper('.swiper-container', {
    slidesPerView: 1,
    spaceBetween: 20,
    effect: 'fade',
    loop: true,
    speed: 300,
    mousewheel: {
        invert: false,
    },
    pagination: {
        el: '.swiper-pagination',
        clickable: true,
        dynamicBullets: true
    },
    // Navigation arrows
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
    }
});


// Fonction pour définir la couleur en fonction du cookie
function setColor() {
    var color = getCookie("color");
    if (color !== "") {
        document.getElementById("css").setAttribute("href", "style/" + color + ".css");
    }
}

// Fonction pour obtenir le cookie
function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(";");
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == " ") c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return "";
}

// Fonction pour définir le cookie
function setCookie(name, value, days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}

// Fonction pour définir la couleur et le cookie
function setRed() {
    document.getElementById("css").setAttribute("href", "style/color1.css");
    setCookie("color", "color1", 7);
}

function setGreen() {
    document.getElementById("css").setAttribute("href", "style/color2.css");
    setCookie("color", "color2", 7);
}

function setYellow() {
    document.getElementById("css").setAttribute("href", "style/color3.css");
    setCookie("color", "color3", 7);
}

function setBlue() {
    document.getElementById("css").setAttribute("href", "style/color4.css");
    setCookie("color", "color4", 7);
}


// Appel de la fonction setColor au chargement de la page
setColor();

// Force a hover to see the effect
const share = document.querySelector('.share');

setTimeout(() => {
    share.classList.add("hover");
}, 1000);

setTimeout(() => {
    share.classList.remove("hover");
}, 3000);

const share2 = document.querySelector('.share2');

setTimeout(() => {
    share2.classList.add("hover");
}, 1000);

setTimeout(() => {
    share2.classList.remove("hover");
}, 3000);

/*Heart function*/
function createheart() {
    const heart = document.createElement("div");
    heart.classList.add("heart");
    heart.classList.add("purple-heart"); // add purple-heart class
    heart.style.left = Math.random() * 100 + "vw";
    heart.style.animationDuration = Math.random() * 2 + 9 + "s";
    Thisismatch.querySelector(".heart-container").appendChild(heart);
    heart.innerText = "♡";

    setTimeout(() => {
        heart.remove();
    }, 5000);
}

//test

// Fonction pour ajouter ou supprimer un film de la liste des likés
function toggleLike() {
  const likeButton = document.getElementById('likeButton');

  if (likeButton.classList.contains('active')) {
    // Le bouton est déjà actif, donc le film est "unliked"
    moviesList = moviesList.filter(movie => movie.title !== currentMovie.title);
    likeButton.classList.remove('active');
  } else {
    // Le bouton n'est pas actif, donc le film est "liked"
    moviesList.push(currentMovie);
    likeButton.classList.add('active');
  }

  // Mettre à jour l'interface utilisateur
  updateMoviesListUI();
}

// Fonction pour mettre à jour l'interface utilisateur avec la liste des films likés
function updateMoviesListUI() {
    const moviesListContainer = document.getElementById('moviesListContainer');

    const moviesListHTML = moviesList
  .map((movie, index) => `
    <div class="movie-item">
    <img src="https://image.tmdb.org/t/p/w200/${movie.poster_path}" alt="${movie.title} Poster">
      <p>${index + 1}. ${movie.title}</p>
      <button class="delete-button" onclick="deleteMovie(${index})">Delete</button>
    </div>
  `)
  .join('');

// Insérer le contenu HTML dans l'élément HTML
moviesListContainer.innerHTML = moviesListHTML;

    // Sauvegarder la liste des films likés dans le stockage local
    localStorage.setItem('moviesList', JSON.stringify(moviesList));
  }

  // Au chargement de la page, restaurer la liste des films likés depuis le stockage local
  window.addEventListener('load', () => {
    const storedMoviesList = localStorage.getItem('moviesList');
    if (storedMoviesList) {
      moviesList = JSON.parse(storedMoviesList);
      updateMoviesListUI();
    }
  });


  function deleteMovie(index) {
    // Supprimer le film de la liste
    moviesList.splice(index, 1);

    // Mettre à jour la liste affichée
    updateMoviesListUI();

    // Mettre à jour la liste sauvegardée dans le stockage local
    saveMoviesList();
  }

  function saveMoviesList() {
    // Convertir la liste en format JSON
    const moviesListJSON = JSON.stringify(moviesList);

    // Sauvegarder la liste dans le stockage local
    localStorage.setItem('moviesList', moviesListJSON);
  }


//end